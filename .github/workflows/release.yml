name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: .release-please-config.json
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    env:
      GIT_TAG: ${{ needs.release-please.outputs.tag_name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Build binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ needs.release-please.outputs.tag_name }}
        run: |
          # Extract version info from tag
          VERSION=${RELEASE_VERSION#v}
          COMMIT=$(git rev-parse HEAD)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          echo "Building version: $VERSION"
          echo "Commit: $COMMIT"
          echo "Date: $DATE"

          # Build binaries for multiple platforms with version info
          task build:release VERSION=$VERSION COMMIT=$COMMIT DATE=$DATE

          # List built files
          ls -la dist/

      - name: Upload binary to GitHub Release
        run: |
          gh release upload $GIT_TAG ./dist/*
